# Tencent is pleased to support the open source community by making BK-BASE 蓝鲸基础平台 available.
#
# Copyright (C) 2021 THL A29 Limited, a Tencent company.  All rights reserved.
#
# BK-BASE 蓝鲸基础平台 is licensed under the MIT License.
#
# License for BK-BASE 蓝鲸基础平台:
# --------------------------------------------------------------------
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial
# portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
# LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
# NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

syntax = "proto3";

service DirectAccess {

  rpc apply(Request) returns (Response) {}
  rpc get_result(Request) returns (Response) {}
  rpc get_status(Request) returns (Response) {}
  rpc cancel(Request) returns (Response) {}
  rpc set_cache(CacheContent) returns (CacheContent) {}
  rpc get_cache(CacheContent) returns (CacheContent) {}
  rpc delete_cache(CacheContent) returns (CacheContent) {}
  rpc stream_set_cache(CacheContent) returns (CacheContent) {}
  rpc stream_get_cache(CacheContent) returns (CacheContent) {}
}

message Request {
  bytes task = 1;
  int32 pickle_protocol = 2;
  bool delay = 3;
  bool block = 4;
  float timeout = 5;
  bool abort = 6;
  string chunked = 7;
}

message Response{
  bytes content = 1;
}

message CacheContent {
  string key = 1;
  bytes value = 2;
  int32 pickle_protocol = 3;
  bool chunked = 4;
}

<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Tencent is pleased to support the open source community by making BK-BASE 蓝鲸基础平台 available.
  ~
  ~ Copyright (C) 2021 THL A29 Limited, a Tencent company.  All rights reserved.
  ~
  ~ BK-BASE 蓝鲸基础平台 is licensed under the MIT License.
  ~
  ~ License for BK-BASE 蓝鲸基础平台:
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
  ~ documentation files (the "Software"), to deal in the Software without restriction, including without limitation
  ~ the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
  ~ and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all copies or substantial
  ~ portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
  ~ LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
  ~ NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
  ~ WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
  ~ SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>unified-computing</artifactId>
        <groupId>com.tencent.bk.base.dataflow</groupId>
        <version>0.1.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>batch</artifactId>
    <packaging>pom</packaging>
    <modules>
        <module>batch-common</module>
        <module>batch-sql</module>
        <module>batch-one-time-sql</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <jdk.version>1.8</jdk.version>
        <jar.file.name></jar.file.name>
        <CodeCacheSize>512m</CodeCacheSize>
        <test.exclude.tags></test.exclude.tags>
        <test.include.tags></test.include.tags>
        <jobnavi.version>0.4.0-SNAPSHOT</jobnavi.version>
        <build.testJarPhase>prepare-package</build.testJarPhase>
    </properties>

    <profiles>
        <profile>
            <id>pyspark-2.4.7</id>
            <properties>
                <scala.version>2.11.12</scala.version>
                <scala.binary.version>2.11</scala.binary.version>
                <spark.internal.version>2.4.7</spark.internal.version>
                <scalatest.version>3.0.3</scalatest.version>
                <junit.version>4.12</junit.version>
                <spark.scope>provided</spark.scope>
                <scala.scope>provided</scala.scope>
                <scala.logging.scope>compile</scala.logging.scope>
                <uc.scope>compile</uc.scope>
            </properties>
        </profile>
        <profile>
            <id>spark-2.4.7</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <scala.version>2.11.12</scala.version>
                <scala.binary.version>2.11</scala.binary.version>
                <spark.internal.version>2.4.7</spark.internal.version>
                <scalatest.version>3.0.3</scalatest.version>
                <junit.version>4.12</junit.version>
                <spark.scope>compile</spark.scope>
                <scala.scope>compile</scala.scope>
                <scala.logging.scope>compile</scala.logging.scope>
                <uc.scope>compile</uc.scope>
            </properties>
        </profile>
        <profile>
            <id>spark-2.3.1</id>

            <properties>
                <scala.version>2.11.11</scala.version>
                <scala.binary.version>2.11</scala.binary.version>
                <spark.internal.version>2.3.1</spark.internal.version>
                <scalatest.version>3.0.3</scalatest.version>
                <junit.version>4.12</junit.version>
                <spark.scope>compile</spark.scope>
                <scala.scope>compile</scala.scope>
                <scala.logging.scope>compile</scala.logging.scope>
                <uc.scope>compile</uc.scope>
                <test.java.home>${env.JAVA_HOME}</test.java.home>
                <spark.test.home>${session.executionRootDirectory}</spark.test.home>
                <scoverage.plugin.version>1.4.0</scoverage.plugin.version>
            </properties>
        </profile>
        <profile>
            <id>tdw</id>
            <properties>
                <scala.version>2.11.11</scala.version>
                <scala.binary.version>2.11</scala.binary.version>
                <spark.internal.version>2.3.1</spark.internal.version>
                <scalatest.version>3.0.3</scalatest.version>
                <junit.version>4.12</junit.version>
                <spark.scope>compile</spark.scope>
                <scala.logging.scope>compile</scala.logging.scope>
                <scala.scope>provided</scala.scope>
                <uc.scope>provided</uc.scope>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
            <scope>${scala.scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
            <version>${scala.version}</version>
            <scope>${scala.scope}</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
            <version>${scala.version}</version>
            <scope>${scala.scope}</scope>
        </dependency>
        <dependency>
            <groupId>com.typesafe.scala-logging</groupId>
            <artifactId>scala-logging_2.11</artifactId>
            <version>3.5.0</version>
            <scope>${scala.logging.scope}</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.binary.version}</artifactId>
            <version>${scalatest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.binary.version}</artifactId>
            <version>${spark.internal.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-catalyst_${scala.binary.version}</artifactId>
            <version>${spark.internal.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.binary.version}</artifactId>
            <version>${spark.internal.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <finalName>${jar.file.name}</finalName>
                    <shadedArtifactAttached>true</shadedArtifactAttached>
                    <shadedClassifierName>jar-with-dependencies</shadedClassifierName>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring.handlers</resource>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring.schemas</resource>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/spring.tooling</resource>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/services/org.apache.spark.sql.sources.DataSourceRegister</resource>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Build test-jar's for all projects, since some projects depend on tests from others -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                        <configuration>
                            <excludes>
                                <exclude>log4j.properties</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <!-- 3.3.1 won't work with zinc; fails to find javac from java.home -->
                <version>3.2.2</version>
                <executions>
                    <execution>
                        <id>scala-compile-first</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile-first</id>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <scalaVersion>${scala.version}</scalaVersion>
                    <recompileMode>incremental</recompileMode>
                    <javacArgs>
                        <javacArg>-source</javacArg>
                        <javacArg>${jdk.version}</javacArg>
                        <javacArg>-target</javacArg>
                        <javacArg>${jdk.version}</javacArg>
                        <javacArg>-Xlint:all,-serial,-path,-try</javacArg>
                    </javacArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
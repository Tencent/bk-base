#
# Tencent is pleased to support the open source community by making BK-BASE 蓝鲸基础计算平台 available.
#
# Copyright (C) 2019 THL A29 Limited, a Tencent company.  All rights reserved.
#
# BK-BASE 蓝鲸基础计算平台 is licensed under the MIT license.
#
# A copy of the MIT License is included in this file.
#
#
# Terms of the MIT License: # Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so, subject to the following conditions: #
# The above copyright notice and this permission notice shall be included in all copies or substantial
# portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
# LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
# NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#

{
"data_flow_url": "http://xxxxx.com:80/v3",
"time_zone": "Asia/Shanghai",
"resource": {
"queue_name": "root.dataflow.batch.default",
"cluster_group": "default"
},
"job_id": "591_random_forest_model_apply_1",
"schedule_time": 1604910960000,
"nodes": {
"source": {
"591_string_indexer_191": {
"input": {
"path": "hdfs://xxxx/app/model/random_forest_model_1/2/591_string_indexer_191",
"type": "hdfs",
"format": "string_indexer"
},
"type": "model",
"id": "591_string_indexer_191",
"name": "591_string_indexer_191"
},
"591_rfc_model_192": {
"input": {
"path": "hdfs://xxxx/app/model/random_forest_model_1/2/591_rfc_model_192",
"type": "hdfs",
"format": "random_forest_classifier"
},
"type": "model",
"id": "591_rfc_model_192",
"name": "591_rfc_model_192"
},
"591_mock_offline_10": {
"name": "591_mock_offline_10",
"fields": [
{
"origin": "",
"field": "int_1",
"type": "int",
"description": "int_1"
},
{
"origin": "",
"field": "int_2",
"type": "int",
"description": "int_2"
},
{
"origin": "",
"field": "int_3",
"type": "int",
"description": "int_3"
},
{
"origin": "",
"field": "char_1",
"type": "string",
"description": "char_1"
},
{
"origin": "",
"field": "char_2",
"type": "string",
"description": "char_2"
},
{
"origin": "",
"field": "char_3",
"type": "string",
"description": "char_3"
},
{
"origin": "",
"field": "double_1",
"type": "double",
"description": "double_1"
},
{
"origin": "",
"field": "double_2",
"type": "double",
"description": "double_2"
},
{
"origin": "",
"field": "double_3",
"type": "double",
"description": "double_3"
},
{
"origin": "",
"field": "word_1",
"type": "string",
"description": "word_1"
},
{
"origin": "",
"field": "word_2",
"type": "string",
"description": "word_2"
},
{
"origin": "",
"field": "word_3",
"type": "string",
"description": "word_3"
},
{
"origin": "",
"field": "string_1",
"type": "string",
"description": "string_1"
},
{
"origin": "",
"field": "string_2",
"type": "string",
"description": "string_2"
},
{
"origin": "",
"field": "string_3",
"type": "string",
"description": "string_3"
}
],
"window": {
"window_type": "fixed",
"window_size": 1,
"count_freq": 1,
"data_end": -1,
"window_delay": 0,
"schedule_period": "hour",
"window_size_period": "hour",
"data_start": -1,
"delay": 0,
"accumulate": false,
"dependency_rule": "all_finished",
"advanced": {
"self_dependency": false,
"start_time": null,
"recovery_enable": false,
"self_dependency_config": {
"fields": [],
"dependency_rule": "self_finished"
},
"recovery_interval": "5m",
"recovery_times": 1
}
},
"input": {
"path": "hdfs://xxxx//api/flow/591/mock_offline_10_591",
"format": "parquet",
"type": "hdfs",
"table_type": "result_table"
},
"type": "data",
"id": "591_mock_offline_10"
}
},
"transform": {
"591_string_indexer_result_191": {
"description": "591_string_indexer_result_191",
"fields": [
{
"origin": [
""
],
"field": "indexed",
"type": "double"
},
{
"origin": [
"double_1"
],
"field": "double_1",
"type": "double"
},
{
"origin": [
"double_2"
],
"field": "double_2",
"type": "double"
}
],
"id": "591_random_forest_model_apply_1_71c653",
"parents": [
"591_mock_offline_10",
"591_string_indexer_191"
],
"interpreter": {
},
"type": "data",
"processor": {
"args": {
"handle_invalid": "keep",
"output_col": "indexed",
"input_col": "char_1"
},
"type": "trained-run",
"name": "string_indexer"
},
"name": "591_random_forest_model_apply_1_71c653"
},
"591_rfc_result_192": {
"name": "591_random_forest_model_apply_1",
"fields": [
{
"origin": [
""
],
"field": "category",
"type": "double"
},
{
"origin": [
"double_1"
],
"field": "double_1",
"type": "double"
},
{
"origin": [
"double_2"
],
"field": "double_2",
"type": "double"
}
],
"processor": {
"args": {
"features_col": "features_col",
"prediction_col": "category"
},
"type": "trained-run",
"name": "random_forest_classifier"
},
"parents": [
"591_rfc_model_192",
"591_random_forest_model_apply_1_71c653"
],
"interpreter": {
"features_col": {
"implement": "Vectors",
"value": [
"double_1",
"double_2"
]
}
},
"type": "data",
"id": "591_random_forest_model_apply_1",
"description": "591_rfc_result_192"
}
},
"sink": {
"591_random_forest_model_apply_1": {
"description": "应用随机木模型一",
"fields": [
{
"origin": [],
"field": "category",
"type": "double",
"description": "category"
},
{
"origin": [],
"field": "double_1",
"type": "double",
"description": "feature1"
},
{
"origin": [],
"field": "double_2",
"type": "double",
"description": "feature2"
}
],
"table_type": "result_table",
"output": {
"path": "hdfs://xxxx//api/flow/591/random_forest_model_apply_1_591",
"type": "hdfs",
"mode": "overwrite",
"format": "parquet"
},
"type": "data",
"id": "591_random_forest_model_apply_1",
"name": "591_random_forest_model_apply_1"
}
}
},
"job_type": "spark_mllib",
"job_name": "591_random_forest_model_apply_1",
"metric": {
"metric_rest_api_url": ""
},
"run_mode": "product"
}

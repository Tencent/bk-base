# Tencent is pleased to support the open source community by making BK-BASE 蓝鲸基础平台 available.
#
# Copyright (C) 2021 THL A29 Limited, a Tencent company.  All rights reserved.
#
# BK-BASE 蓝鲸基础平台 is licensed under the MIT License.
#
# License for BK-BASE 蓝鲸基础平台:
# --------------------------------------------------------------------
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial
# portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
# LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
# NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

{
  "data_flow_url": "http://your.api.service/",
  "time_zone": "Asia/Shanghai",
  "resource": {
    "queue_name": "test_queue",
    "cluster_group": "test_group"
  },
  "job_id": "591_random_forest_app",
  "schedule_time": 1607333078857,
  "nodes": {
    "source": {
      "591_string_indexer_204": {
        "input": {
          "path": "hdfs://xxxx/591_string_indexer_204",
          "type": "hdfs",
          "format": "string_indexer"
        },
        "type": "model",
        "id": "591_string_indexer_204",
        "name": "591_string_indexer_204"
      },
      "591_rfc_model_204": {
        "input": {
          "path": "hdfs://xxxx/591_rfc_model_204",
          "type": "hdfs",
          "format": "random_forest_classifier"
        },
        "type": "model",
        "id": "591_rfc_model_204",
        "name": "591_rfc_model_204"
      },
      "591_mock_table_test": {
        "name": "591_mock_table_test",
        "fields": [
          {
            "origin": "",
            "field": "mock_int_1",
            "type": "int",
            "description": "mock_int_1"
          },
          {
            "origin": "",
            "field": "mock_int_2",
            "type": "int",
            "description": "mock_int_2"
          },
          {
            "origin": "",
            "field": "mock_int_3",
            "type": "int",
            "description": "mock_int_3"
          },
          {
            "origin": "",
            "field": "mock_char_1",
            "type": "string",
            "description": "mock_char_1"
          },
          {
            "origin": "",
            "field": "mock_char_2",
            "type": "string",
            "description": "mock_char_2"
          },
          {
            "origin": "",
            "field": "mock_char_3",
            "type": "string",
            "description": "mock_char_3"
          },
          {
            "origin": "",
            "field": "mock_double_1",
            "type": "double",
            "description": "mock_double_1"
          },
          {
            "origin": "",
            "field": "mock_doule_2",
            "type": "double",
            "description": "mock_doule_2"
          },
          {
            "origin": "",
            "field": "mock_double_3",
            "type": "double",
            "description": "mock_double_3"
          },
          {
            "origin": "",
            "field": "mock_word_1",
            "type": "string",
            "description": "mock_word_1"
          },
          {
            "origin": "",
            "field": "mock_word_2",
            "type": "string",
            "description": "mock_word_2"
          },
          {
            "origin": "",
            "field": "mock_word_3",
            "type": "string",
            "description": "mock_word_3"
          },
          {
            "origin": "",
            "field": "mock_string_1",
            "type": "string",
            "description": "mock_string_1"
          },
          {
            "origin": "",
            "field": "mock_string_2",
            "type": "string",
            "description": "mock_string_2"
          },
          {
            "origin": "",
            "field": "mock_string_3",
            "type": "string",
            "description": "mock_string_3"
          }
        ],
        "window": {
          "window_type": "fixed",
          "window_size": 1,
          "count_freq": 1,
          "data_end": -1,
          "window_delay": 0,
          "schedule_period": "hour",
          "window_size_period": "hour",
          "data_start": -1,
          "delay": 0,
          "accumulate": false,
          "dependency_rule": "all_finished",
          "advanced": {
            "self_dependency": false,
            "start_time": null,
            "recovery_enable": false,
            "self_dependency_config": {
              "fields": [],
              "dependency_rule": "self_finished"
            },
            "recovery_interval": "5m",
            "recovery_times": 1
          }
        },
        "input": {
          "path": "hdfs://xxxx/591_mock_table_test",
          "iceberg_config": {
            "hdfs_config": {
              "table.max.compact.file.size": 16777216,
              "dfs.namenode.servicerpc-address.hdfsCluster.nn2": "0.0.0.0",
              "dfs.namenode.servicerpc-address.hdfsCluster.nn1": "0.0.0.0",
              "hdfs_conf_dir": "/data/test/conf",
              "topic_dir": "/test/data/",
              "table.preserve.snapshot.days": 3,
              "table.commit.retry.min-wait-ms": 50,
              "dfs.namenode.rpc-address.hdfsCluster.nn2": "0.0.0.0",
              "dfs.namenode.rpc-address.hdfsCluster.nn1": "0.0.0.0",
              "log_dir": "/test/logs",
              "dfs.ha.namenodes.testOnline": "nn1,nn2",
              "hive.metastore.uris": "thrift://0.0.0.0,thrift://0.0.0.0",
              "dfs.client.failover.proxy.provider.hdfsCluster": "provider",
              "dfs.nameservices": "test",
              "dfs.replication": 2,
              "table.commit.retry.total-timeout-ms": 600000,
              "hive.metastore.warehouse.dir": "/data/test/warehouse",
              "dfs.namenode.http-address.hdfsCluster.nn2": "0.0.0.0",
              "dfs.namenode.http-address.hdfsCluster.nn1": "0.0.0.0",
              "fs.defaultFS": "hdfs://xxxx",
              "table.preserve.snapshot.nums": 100,
              "interval": 300000,
              "table.commit.retry.num-retries": 2000,
              "table.commit.retry.max-wait-ms": 500,
              "flush.size": 1000000,
              "table.max.rewrite.files": 1000
            },
            "physical_table_name": "591_mock_table_test"
          },
          "format": "iceberg",
          "type": "hdfs",
          "table_type": "result_table"
        },
        "type": "data",
        "id": "591_mock_table_test"
      }
    },
    "transform": {
      "591_string_indexer_result_204": {
        "name": "591_string_indexer_result_204",
        "fields": [
          {
            "origin": "",
            "field": "indexed",
            "type": "double"
          },
          {
            "origin": "mock_double_1",
            "field": "test_double_1",
            "type": "double"
          },
          {
            "origin": "mock_doule_2",
            "field": "test_double_2",
            "type": "double"
          }
        ],
        "processor": {
          "args": {
            "handle_invalid": "keep",
            "output_col": "indexed",
            "input_col": "char_1",
            "sql":"select * from test"
          },
          "type": "trained-run",
          "name": "string_indexer"
        },
        "parents": [
          "591_string_indexer_204",
          "591_mock_table_test"
        ],
        "interpreter": {},
        "type": "data",
        "id": "591_string_indexer_result_204",
        "description": "591_string_indexer_result_204"
      },
      "591_rfc_result_204": {
        "name": "591_rfc_result_204",
        "fields": [
          {
            "origin": "",
            "field": "category",
            "type": "double"
          },
          {
            "origin": "test_double_1",
            "field": "test_double_1",
            "type": "double"
          },
          {
            "origin": "test_double_2",
            "field": "test_double_2",
            "type": "double"
          }
        ],
        "id": "591_rfc_result_204",
        "parents": [
          "591_rfc_model_204"
        ],
        "interpreter": {
          "features_col": {
            "implement": "Vectors",
            "value": [
              "test_double_1",
              "test_double_2"
            ]
          }
        },
        "type": "data",
        "processor": {
          "args": {
            "prediction_col": "category",
            "features_col": "features_col"
          },
          "type": "trained-run",
          "name": "random_forest_classifier"
        },
        "description": "591_rfc_result_204"
      }
    },
    "sink": {
      "591_random_forest_result": {
        "description": "random_forest_result",
        "fields": [
          {
            "origin": [],
            "field": "category",
            "type": "double",
            "description": "category"
          },
          {
            "origin": [],
            "field": "double_1",
            "type": "double",
            "description": "double_1"
          },
          {
            "origin": [],
            "field": "double_2",
            "type": "double",
            "description": "double_2"
          }
        ],
        "table_type": "result_table",
        "output": {
          "path": "hdfs://xxxx/591_random_forest_result",
          "table_type": "result_table",
          "type": "hdfs",
          "mode": "overwrite",
          "format": "parquet"
        },
        "storages": {
          "hdfs": {
            "storage_channel": {},
            "storage_channel_id": null,
            "description": "DataFlow增加存储",
            "data_type": "parquet",
            "created_at": "2020-12-07 17:15:43",
            "expires": "3d",
            "storage_config": "{}",
            "updated_at": "2020-12-07 17:24:36",
            "created_by": "xxxx",
            "id": 15757,
            "priority": 0,
            "storage_cluster_config_id": 452,
            "generate_type": "user",
            "previous_cluster_name": "xxxx",
            "active": true,
            "storage_cluster": {
              "cluster_name": "xxxx",
              "connection_info": "{}",
              "cluster_type": "hdfs",
              "expires": "{}",
              "storage_cluster_config_id": 452,
              "priority": 26,
              "belongs_to": "bkdata",
              "version": "2.6.0",
              "cluster_group": "default-hdfs",
              "id": 452
            },
            "physical_table_name": "591_random_forest_result",
            "result_table_id": "591_random_forest_result",
            "updated_by": "xxxxx"
          }
        },
        "type": "data",
        "id": "591_random_forest_result",
        "name": "591_random_forest_result"
      }
    }
  },
  "job_type": "spark_mllib",
  "job_name": "591_random_forest_result",
  "metric": {
    "metric_rest_api_url": "http://your.metric.report.url"
  },
  "debug": {
    "debug_exec_id": "123",
    "debug_id": "abc",
    "debug_rest_api_url": "http：//test"
  },
  "run_mode": "product"
}
# Tencent is pleased to support the open source community by making BK-BASE 蓝鲸基础平台 available.
#
# Copyright (C) 2021 THL A29 Limited, a Tencent company.  All rights reserved.
#
# BK-BASE 蓝鲸基础平台 is licensed under the MIT License.
#
# License for BK-BASE 蓝鲸基础平台:
# --------------------------------------------------------------------
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial
# portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
# LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
# NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

{
  "data_flow_url": "http://your.api.service/",
  "time_zone": "Asia/Shanghai",
  "resource": {
    "queue_name": "test_queue",
    "cluster_group": "test_group"
  },
  "job_id": "591_random_forest_app",
  "schedule_time": 1607333078857,
  "nodes": {
    "source": {
      "591_string_indexer_204": {
        "input": {
          "path": "hdfs://xxxx/591_string_indexer_204",
          "type": "hdfs",
          "format": "string_indexer"
        },
        "type": "model",
        "id": "591_string_indexer_204",
        "name": "591_string_indexer_204"
      },
      "591_rfc_model_204": {
        "input": {
          "path": "hdfs://xxxx/591_rfc_model_204",
          "type": "hdfs",
          "format": "random_forest_classifier"
        },
        "type": "model",
        "id": "591_rfc_model_204",
        "name": "591_rfc_model_204"
      },
      "591_mock_test_result_queryset_parquet": {
          "name": "591_mock_test_result_queryset_parquet",
          "fields": [
              {
                  "origin": "",
                  "field": "mock_int_1",
                  "type": "int",
                  "description": "mock_int_1"
              }
          ],
          "window": {
              "window_type": "fixed",
              "window_size": 1,
              "count_freq": 1,
              "data_end": -1,
              "window_delay": 0,
              "schedule_period": "hour",
              "window_size_period": "hour",
              "data_start": -1,
              "delay": 0,
              "accumulate": false,
              "dependency_rule": "all_finished",
              "advanced": {

              }
          },
          "input": {
              "path": "hdfs://xxxx/mock_test_result_591",
              "iceberg_config": {
                  "hdfs_config": {
                      "hive.metastore.uris": "0.0.0.0"
                  },
                  "physical_table_name": "mock_test_result_591"
              },
              "format": "parquet",
              "type": "hdfs",
              "table_type": "query_set"
          },
          "type": "data",
          "id": "591_mock_test_result_queryset_parquet"
      },
      "591_mock_test_result_queryset_iceberg": {
          "name": "591_mock_test_result_queryset_iceberg",
          "fields": [
              {
                  "origin": "",
                  "field": "mock_int_1",
                  "type": "int",
                  "description": "mock_int_1"
              }
          ],
          "window": {
              "window_type": "fixed",
              "window_size": 1,
              "count_freq": 1,
              "data_end": -1,
              "window_delay": 0,
              "schedule_period": "hour",
              "window_size_period": "hour",
              "data_start": -1,
              "delay": 0,
              "accumulate": false,
              "dependency_rule": "all_finished",
              "advanced": {

              }
          },
          "input": {
              "path": "hdfs://xxxx/mock_test_result_591",
              "iceberg_config": {
                  "hdfs_config": {
                      "hive.metastore.uris": "0.0.0.0"
                  },
                  "physical_table_name": "mock_test_result_591"
              },
              "format": "iceberg",
              "type": "hdfs",
              "table_type": "query_set"
          },
          "type": "data",
          "id": "591_mock_test_result_queryset_iceberg"
      },
      "591_mock_test_result_result_table_parquet": {
          "name": "591_mock_test_result_result_table_parquet",
          "fields": [
              {
                  "origin": "",
                  "field": "mock_int_1",
                  "type": "int",
                  "description": "mock_int_1"
              }
          ],
          "window": {
              "window_type": "fixed",
              "window_size": 1,
              "count_freq": 1,
              "data_end": -1,
              "window_delay": 0,
              "schedule_period": "hour",
              "window_size_period": "hour",
              "data_start": -1,
              "delay": 0,
              "accumulate": false,
              "dependency_rule": "all_finished",
              "advanced": {

              }
          },
          "input": {
              "path": "hdfs://xxxx/mock_test_result_591",
              "iceberg_config": {
                  "hdfs_config": {
                      "hive.metastore.uris": "0.0.0.0"
                  },
                  "physical_table_name": "mock_test_result_591"
              },
              "format": "parquet",
              "type": "hdfs",
              "table_type": "result_table"
          },
          "type": "data",
          "id": "591_mock_test_result_result_table_parquet"
      },
      "591_mock_test_result_result_table_iceberg": {
          "name": "591_mock_test_result_result_table_iceberg",
          "fields": [
              {
                  "origin": "",
                  "field": "mock_int_1",
                  "type": "int",
                  "description": "mock_int_1"
              }
          ],
          "window": {
              "window_type": "fixed",
              "window_size": 1,
              "count_freq": 1,
              "data_end": -1,
              "window_delay": 0,
              "schedule_period": "hour",
              "window_size_period": "hour",
              "data_start": -1,
              "delay": 0,
              "accumulate": false,
              "dependency_rule": "all_finished",
              "advanced": {

              }
          },
          "input": {
              "path": "hdfs://xxxx/mock_test_result_591",
              "iceberg_config": {
                  "hdfs_config": {
                      "hive.metastore.uris": "0.0.0.0"
                  },
                  "physical_table_name": "mock_test_result_591"
              },
              "format": "iceberg",
              "type": "hdfs",
              "table_type": "result_table"
          },
          "type": "data",
          "id": "591_mock_test_result_result_table_iceberg"
      },
      "591_mock_table_test": {
        "name": "591_mock_table_test",
        "window": {
          "window_type": "fixed",
          "window_size": 1,
          "count_freq": 1,
          "data_end": -1,
          "window_delay": 0,
          "schedule_period": "hour",
          "window_size_period": "hour",
          "data_start": -1,
          "delay": 0,
          "accumulate": false,
          "dependency_rule": "all_finished",
          "advanced": {
            "self_dependency": false,
            "start_time": null,
            "recovery_enable": false,
            "self_dependency_config": {
              "fields": [],
              "dependency_rule": "self_finished"
            },
            "recovery_interval": "5m",
            "recovery_times": 1
          }
        },
        "input": {
            "path": "hdfs://xxxx/mock_test_result_591",
            "iceberg_config": {
                "hdfs_config": {
                    "hive.metastore.uris": "0.0.0.0"
                },
                "physical_table_name": "mock_test_result_591"
            },
            "format": "parquet",
            "type": "hdfs",
            "table_type": "result_table"
        },
        "type": "data",
        "id": "591_mock_table_test"
      },
      "591_mock_table_test_1": {
        "name": "591_mock_table_test",
        "window": {
          "window_type": "fixed",
          "window_size": 1,
          "count_freq": 2,
          "data_end": -1,
          "window_delay": 0,
          "schedule_period": "day",
          "window_size_period": "day",
          "data_start": -1,
          "delay": 0,
          "accumulate": false,
          "dependency_rule": "all_finished",
          "advanced": {
            "self_dependency": false,
            "start_time": null,
            "recovery_enable": false,
            "self_dependency_config": {
              "fields": [],
              "dependency_rule": "self_finished"
            },
            "recovery_interval": "5m",
            "recovery_times": 1
          }
        },
        "input": {
            "path": "hdfs://xxxx/mock_test_result_591",
            "iceberg_config": {
                "hdfs_config": {
                    "hive.metastore.uris": "0.0.0.0"
                },
                "physical_table_name": "mock_test_result_591"
            },
            "format": "parquet",
            "type": "hdfs",
            "table_type": "result_table"
        },
        "type": "data",
        "id": "591_mock_table_test_1"
      },
      "591_mock_table_test_2": {
        "name": "591_mock_table_test",
        "window": {
          "window_type": "fixed",
          "window_size": 1,
          "count_freq": 1,
          "data_end": -1,
          "window_delay": 0,
          "schedule_period": "week",
          "window_size_period": "week",
          "data_start": -1,
          "delay": 0,
          "accumulate": true,
          "dependency_rule": "all_finished",
          "advanced": {
            "self_dependency": false,
            "start_time": null,
            "recovery_enable": false,
            "self_dependency_config": {
              "fields": [],
              "dependency_rule": "self_finished"
            },
            "recovery_interval": "5m",
            "recovery_times": 1
          }
        },
        "input": {
            "path": "hdfs://xxxx/mock_test_result_591",
            "iceberg_config": {
                "hdfs_config": {
                    "hive.metastore.uris": "0.0.0.0"
                },
                "physical_table_name": "mock_test_result_591"
            },
            "format": "parquet",
            "type": "hdfs",
            "table_type": "result_table"
        },
        "type": "data",
        "id": "591_mock_table_test_2"
      },
      "591_mock_table_test_3": {
        "name": "591_mock_table_test",
        "window": {
          "window_type": "fixed",
          "window_size": 1,
          "count_freq": 1,
          "data_end": -1,
          "window_delay": 0,
          "schedule_period": "month",
          "window_size_period": "month",
          "data_start": -1,
          "delay": 0,
          "accumulate": false,
          "dependency_rule": "all_finished",
          "advanced": {
            "self_dependency": false,
            "start_time": null,
            "recovery_enable": false,
            "self_dependency_config": {
              "fields": [],
              "dependency_rule": "self_finished"
            },
            "recovery_interval": "5m",
            "recovery_times": 1
          }
        },
        "input": {
            "path": "hdfs://xxxx/mock_test_result_591",
            "iceberg_config": {
                "hdfs_config": {
                    "hive.metastore.uris": "0.0.0.0"
                },
                "physical_table_name": "mock_test_result_591"
            },
            "format": "parquet",
            "type": "hdfs",
            "table_type": "result_table"
        },
        "type": "data",
        "id": "591_mock_table_test_3"
      }
    },
    "transform": {
      "591_string_indexer_result_204": {
        "name": "591_string_indexer_result_204",
        "fields": [
          {
            "origin": "",
            "field": "indexed",
            "type": "double"
          },
          {
            "origin": "id1",
            "field": "id",
            "type": "double"
          },
          {
            "origin": "count1",
            "field": "count",
            "type": "double"
          }
        ],
        "processor": {
          "args": {
            "handle_invalid": "keep",
            "output_col": "indexed",
            "input_col": "char_1"
          },
          "type": "trained-run",
          "name": "string_indexer"
        },
        "parents": [
          "591_string_indexer_204",
          "591_mock_test_result_queryset_parquet"
        ],
        "interpreter": {},
        "type": "data",
        "id": "591_string_indexer_result_204",
        "description": "591_string_indexer_result_204"
      },
      "591_rfc_result_204": {
        "name": "591_rfc_result_204",
        "fields": [
          {
            "origin": "",
            "field": "category",
            "type": "double"
          },
          {
            "origin": "test_double_1",
            "field": "test_double_1",
            "type": "double"
          },
          {
            "origin": "test_double_2",
            "field": "test_double_2",
            "type": "double"
          }
        ],
        "id": "591_rfc_result_204",
        "parents": [
          "591_rfc_model_204"
        ],
        "interpreter": {
          "features_col": {
            "implement": "Vectors",
            "value": [
              "id",
              "count"
            ]
          }
        },
        "type": "data",
        "processor": {
          "args": {
            "prediction_col": "category",
            "features_col": "features_col"
          },
          "type": "trained-run",
          "name": "random_forest_classifier"
        },
        "description": "591_rfc_result_204"
      },
      "591_rfc_result_204_train": {
        "name": "591_rfc_result_204_train",
        "fields": [
          {
            "origin": "",
            "field": "category",
            "type": "double"
          },
          {
            "origin": "test_double_1",
            "field": "test_double_1",
            "type": "double"
          },
          {
            "origin": "test_double_2",
            "field": "test_double_2",
            "type": "double"
          }
        ],
        "id": "591_rfc_result_204_train",
        "parents": [
          "591_rfc_model_204"
        ],
        "interpreter": {
          "features_col": {
            "implement": "Arrays",
            "value": [
              "id",
              "count"
            ]
          }
        },
        "type": "data",
        "processor": {
          "args": {
            "prediction_col": "category",
            "features_col": "features_col"
          },
          "type": "train",
          "name": "random_forest_classifier"
        },
        "description": "591_rfc_result_204_train"
      },
      "591_rfc_result_204_unknown": {
        "name": "591_rfc_result_204_unknown",
        "fields": [
          {
            "origin": "",
            "field": "category",
            "type": "double"
          },
          {
            "origin": "test_double_1",
            "field": "test_double_1",
            "type": "double"
          },
          {
            "origin": "test_double_2",
            "field": "test_double_2",
            "type": "double"
          }
        ],
        "id": "591_rfc_result_204_unknown",
        "parents": [
          "591_rfc_model_204"
        ],
        "interpreter": {
          "features_col": {
            "implement": "Unknown",
            "value": [
              "test_double_1",
              "test_double_2"
            ]
          }
        },
        "type": "data",
        "processor": {
          "args": {
            "prediction_col": "category",
            "features_col": "features_col"
          },
          "type": "unkown",
          "name": "random_forest_classifier"
        },
        "description": "591_rfc_result_204_unknown"
      },
      "591_rfc_result_204_sub_query": {
        "task_type": "sub_query",
        "name": "591_rfc_result_204_sub_query",
        "fields": [
          {
            "origin": "",
            "field": "category",
            "type": "double"
          },
          {
            "origin": "test_double_1",
            "field": "test_double_1",
            "type": "double"
          },
          {
            "origin": "test_double_2",
            "field": "test_double_2",
            "type": "double"
          }
        ],
        "id": "591_rfc_result_204_sub_query",
        "parents": [
          "591_rfc_model_204"
        ],
        "interpreter": {
          "features_col": {
            "implement": "Vectors",
            "value": [
              "test_double_1",
              "test_double_2"
            ]
          }
        },
        "type": "data",
        "processor": {
          "args": {
            "prediction_col": "category",
            "features_col": "features_col",
            "sql": "select * from test"
          },
          "type": "train",
          "name": "random_forest_classifier"
        },
        "description": "591_rfc_result_204_sub_query"
      }
    },
    "sink": {
      "591_random_forest_result_model" : {
        "output": {
          "path": "hdfs://xxxx/591_random_forest_result_model",
          "type": "hdfs",
          "format": "string_indexer",
          "mode": "overwrite"
        },
        "type": "model",
        "id": "591_random_forest_result_model",
        "name": "591_random_forest_result_model"
      },
      "591_random_forest_queryset_parquet": {
        "description": "random_forest_result",
        "fields": [
          {
            "origin": [],
            "field": "category",
            "type": "double",
            "description": "category"
          },
          {
            "origin": [],
            "field": "double_1",
            "type": "double",
            "description": "double_1"
          },
          {
            "origin": [],
            "field": "double_2",
            "type": "double",
            "description": "double_2"
          }
        ],
        "table_type": "query_set",
        "output": {
          "path": "hdfs://xxxx/591_random_forest_result",
          "table_type": "query_set",
          "type": "hdfs",
          "mode": "overwrite",
          "format": "parquet"
        },
        "storages": {
          "hdfs": {
            "storage_channel": {},
            "storage_channel_id": null,
            "description": "DataFlow增加存储",
            "data_type": "parquet",
            "created_at": "2020-12-07 17:15:43",
            "expires": "3d",
            "storage_config": "{}",
            "updated_at": "2020-12-07 17:24:36",
            "created_by": "xxxx",
            "id": 15757,
            "priority": 0,
            "storage_cluster_config_id": 452,
            "generate_type": "user",
            "previous_cluster_name": "xxxx",
            "active": true,
            "storage_cluster": {
              "cluster_name": "xxxx",
              "connection_info": "{}",
              "cluster_type": "hdfs",
              "expires": "{}",
              "storage_cluster_config_id": 452,
              "priority": 26,
              "belongs_to": "bkdata",
              "version": "2.6.0",
              "cluster_group": "default-hdfs",
              "id": 452
            },
            "physical_table_name": "591_random_forest_result",
            "result_table_id": "591_random_forest_result",
            "updated_by": "xxxxx"
          }
        },
        "type": "data",
        "id": "591_random_forest_queryset_parquet",
        "name": "591_random_forest_queryset_parquet"
      },
      "591_random_forest_queryset_iceberg": {
        "description": "random_forest_result",
        "fields": [
          {
            "origin": [],
            "field": "category",
            "type": "double",
            "description": "category"
          },
          {
            "origin": [],
            "field": "double_1",
            "type": "double",
            "description": "double_1"
          },
          {
            "origin": [],
            "field": "double_2",
            "type": "double",
            "description": "double_2"
          }
        ],
        "table_type": "query_set",
        "output": {
          "path": "hdfs://xxxx/591_random_forest_result",
          "table_type": "query_set",
          "type": "hdfs",
          "mode": "overwrite",
          "format": "iceberg",
          "iceberg_config": {
            "hdfs_config": {
              "hive.metastore.uris": "xxx"
            },
            "physical_table_name": "591_random_forest_result"
          }
        },
        "storages": {
          "hdfs": {
            "storage_channel": {},
            "storage_channel_id": null,
            "description": "DataFlow增加存储",
            "data_type": "parquet",
            "created_at": "2020-12-07 17:15:43",
            "expires": "3d",
            "storage_config": "{}",
            "updated_at": "2020-12-07 17:24:36",
            "created_by": "xxxx",
            "id": 15757,
            "priority": 0,
            "storage_cluster_config_id": 452,
            "generate_type": "user",
            "previous_cluster_name": "xxxx",
            "active": true,
            "storage_cluster": {
              "cluster_name": "xxxx",
              "connection_info": "{}",
              "cluster_type": "hdfs",
              "expires": "{}",
              "storage_cluster_config_id": 452,
              "priority": 26,
              "belongs_to": "bkdata",
              "version": "2.6.0",
              "cluster_group": "default-hdfs",
              "id": 452
            },
            "physical_table_name": "591_random_forest_result",
            "result_table_id": "591_random_forest_result",
            "updated_by": "xxxxx"
          }
        },
        "type": "data",
        "id": "591_random_forest_queryset_iceberg",
        "name": "591_random_forest_queryset_iceberg"
      },
      "591_random_forest_result_iceberg": {
        "description": "random_forest_result",
        "fields": [
          {
            "origin": [],
            "field": "category",
            "type": "double",
            "description": "category"
          },
          {
            "origin": [],
            "field": "double_1",
            "type": "double",
            "description": "double_1"
          },
          {
            "origin": [],
            "field": "double_2",
            "type": "double",
            "description": "double_2"
          }
        ],
        "table_type": "result_table",
        "output": {
          "path": "hdfs://xxxx/591_random_forest_result",
          "table_type": "result_table",
          "type": "hdfs",
          "mode": "overwrite",
          "format": "iceberg",
          "iceberg_config": {
            "hdfs_config": {
              "hive.metastore.uris": "xxx"
            },
            "physical_table_name": "591_random_forest_result"
          }
        },
        "storages": {
          "hdfs": {
            "storage_channel": {},
            "storage_channel_id": null,
            "description": "DataFlow增加存储",
            "data_type": "parquet",
            "created_at": "2020-12-07 17:15:43",
            "expires": "3d",
            "storage_config": "{}",
            "updated_at": "2020-12-07 17:24:36",
            "created_by": "xxxx",
            "id": 15757,
            "priority": 0,
            "storage_cluster_config_id": 452,
            "generate_type": "user",
            "previous_cluster_name": "xxxx",
            "active": true,
            "storage_cluster": {
              "cluster_name": "xxxx",
              "connection_info": "{}",
              "cluster_type": "hdfs",
              "expires": "{}",
              "storage_cluster_config_id": 452,
              "priority": 26,
              "belongs_to": "bkdata",
              "version": "2.6.0",
              "cluster_group": "default-hdfs",
              "id": 452
            },
            "physical_table_name": "591_random_forest_result",
            "result_table_id": "591_random_forest_result",
            "updated_by": "xxxxx"
          }
        },
        "type": "data",
        "id": "591_random_forest_result_iceberg",
        "name": "591_random_forest_result_iceberg"
      },
      "591_random_forest_result": {
        "description": "random_forest_result",
        "fields": [
          {
            "origin": [],
            "field": "category",
            "type": "double",
            "description": "category"
          },
          {
            "origin": [],
            "field": "double_1",
            "type": "double",
            "description": "double_1"
          },
          {
            "origin": [],
            "field": "double_2",
            "type": "double",
            "description": "double_2"
          }
        ],
        "table_type": "result_table",
        "output": {
          "path": "hdfs://xxxx/591_random_forest_result",
          "table_type": "result_table",
          "type": "hdfs",
          "mode": "overwrite",
          "format": "parquet"
        },
        "storages": {
          "hdfs": {
            "storage_channel": {},
            "storage_channel_id": null,
            "description": "DataFlow增加存储",
            "data_type": "parquet",
            "created_at": "2020-12-07 17:15:43",
            "expires": "3d",
            "storage_config": "{}",
            "updated_at": "2020-12-07 17:24:36",
            "created_by": "xxxx",
            "id": 15757,
            "priority": 0,
            "storage_cluster_config_id": 452,
            "generate_type": "user",
            "previous_cluster_name": "xxxx",
            "active": true,
            "storage_cluster": {
              "cluster_name": "xxxx",
              "connection_info": "{}",
              "cluster_type": "hdfs",
              "expires": "{}",
              "storage_cluster_config_id": 452,
              "priority": 26,
              "belongs_to": "bkdata",
              "version": "2.6.0",
              "cluster_group": "default-hdfs",
              "id": 452
            },
            "physical_table_name": "591_random_forest_result",
            "result_table_id": "591_random_forest_result",
            "updated_by": "xxxxx"
          }
        },
        "type": "data",
        "id": "591_random_forest_result",
        "name": "591_random_forest_result"
      }
    }
  },
  "job_type": "spark_mllib",
  "job_name": "591_random_forest_result",
  "metric": {
    "metric_rest_api_url": "http://your.metric.report.url"
  },
  "debug": {
      "debug_exec_id": "123",
      "debug_id": "abc",
      "debug_rest_api_url": "http：//test"
    },
  "run_mode": "product"
}
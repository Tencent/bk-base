# -*- coding: utf-8 -*
"""
Tencent is pleased to support the open source community by making BK-BASE 蓝鲸基础平台 available.

Copyright (C) 2021 THL A29 Limited, a Tencent company.  All rights reserved.

BK-BASE 蓝鲸基础平台 is licensed under the MIT License.

License for BK-BASE 蓝鲸基础平台:
--------------------------------------------------------------------
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
documentation files (the "Software"), to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial
portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
"""
# flake8: noqa

# [公共] API 启动环境
RUN_VERSION = "__BKDATA_RUN_VERSION__"
RUN_MODE = "__BKDATA_RUN_MODE__"
APP_NAME = "dataflow"

# [专属] 项目部署相关信息
#  API启动端口
BIND_IP_ADDRESS = "__BKDATA_DATAFLOWAPI_HOST__"
pizza_port = __BKDATA_DATAFLOWAPI_PORT__

# [公共] 其他模块API参数
AUTH_API_HOST = "__BKDATA_AUTHAPI_HOST__"
AUTH_API_PORT = __BKDATA_AUTHAPI_PORT__
ACCESS_API_HOST = "__BKDATA_DATAHUBAPI_HOST__"
ACCESS_API_PORT = __BKDATA_DATAHUBAPI_PORT__
DATABUS_API_HOST = "__BKDATA_DATAHUBAPI_HOST__"
DATABUS_API_PORT = __BKDATA_DATAHUBAPI_PORT__
DATAFLOW_API_HOST = "__BKDATA_DATAFLOWAPI_HOST__"
DATAFLOW_API_PORT = __BKDATA_DATAFLOWAPI_PORT__
DATAMANAGE_API_HOST = "__BKDATA_DATAMANAGEAPI_HOST__"
DATAMANAGE_API_PORT = __BKDATA_DATAMANAGEAPI_PORT__
DATAQUERY_API_HOST = "__BKDATA_QUERYENGINEAPI_HOST__"
DATAQUERY_API_PORT = __BKDATA_QUERYENGINEAPI_PORT__
JOBNAVI_API_HOST = "__BKDATA_JOBNAVIAPI_HOST__"
JOBNAVI_API_PORT = __BKDATA_JOBNAVIAPI_PORT__
META_API_HOST = "__BKDATA_METAAPI_HOST__"
META_API_PORT = __BKDATA_METAAPI_PORT__
STOREKIT_API_HOST = "__BKDATA_DATAHUBAPI_HOST__"
STOREKIT_API_PORT = __BKDATA_DATAHUBAPI_PORT__
MODELFLOW_API_HOST = "__BKDATA_MODELFLOWAPI_HOST__"
MODELFLOW_API_PORT = __BKDATA_MODELFLOWAPI_PORT__
AIOPS_API_HOST = "__BKDATA_AIOPSAPI_HOST__"
AIOPS_API_PORT = __BKDATA_AIOPSAPI_PORT__
MODEL_API_HOST = "__BKDATA_MODELAPI_HOST__"
MODEL_API_PORT = __BKDATA_MODELAPI_PORT__
RESOURCECENTER_API_HOST = "__BKDATA_RESOURCECENTER_API_HOST__"
RESOURCECENTER_API_PORT = __BKDATA_RESOURCECENTER_API_PORT__
CODECHECK_API_HOST = "__BKDATA_CODECHECKAPI_HOST__"
CODECHECK_API_PORT = __BKDATA_CODECHECKAPI_PORT__
BASE_DATALAB_URL_API_HOST = "__BKDATA_DATALABAPI_HOST__"
BASE_DATALAB_URL_API_PORT = __BKDATA_DATALABAPI_PORT__
BKSQL_MLSQL_HOST = "__BKDATA_MLSQL_API_HOST__"
BKSQL_MLSQL_PORT = __BKDATA_MLSQL_API_PORT__
API_URL = "__BKDATA_DATAFLOWAPI_HOST__:__BKDATA_DATAFLOWAPI_PORT__"

# [公共] 第三方系统 URL
CC_API_URL = "http://__PAAS_FQDN__/component/compapi/cc/"
JOB_API_URL = "http://__PAAS_FQDN__/component/compapi/job/"
TOF_API_URL = "http://__PAAS_FQDN__/component/compapi/tof/"
SMCS_API_URL = "http://__PAAS_FQDN__/component/compapi/smcs/"
GSE_API_URL = "http://__PAAS_FQDN__/component/compapi/gse/"
CMSI_API_URL = "http://__PAAS_FQDN__/component/compapi/cmsi/"
BK_LOGIN_API_URL = "http://__PAAS_HOST__:__PAAS_HTTP_PORT__/api/c/compapi/v2/bk_login/"
ES_LOG_API_URL = "http://__LOG_SEARCH__"

# [公共] 运行时区设置
TIME_ZONE = "__BK_TIMEZONE__"
DATA_TIME_ZONE = "__GEOG_AREA_TIMEZONE__"
UC_TIME_ZONE = "__GEOG_AREA_TIMEZONE__"

# PaaS注册之后生成的APP_ID, APP_TOKEN, BK_PAAS_HOST
APP_ID = "__APP_CODE__"
APP_TOKEN = "__APP_TOKEN__"
BK_PAAS_HOST = "http://__PAAS_HOST__:__PAAS_HTTP_PORT__"
SECRET_KEY = "__DJANGO_SECRET_KEY__"

# [公共] 加解密配置
CRYPT_ROOT_KEY = "__BKDATA_ROOT_KEY__"
CRYPT_ROOT_IV = "__BKDATA_ROOT_IV__"
CRYPT_INSTANCE_KEY = "__CRYPT_INSTANCE_KEY__"

# license server
LICENSE_SERVER_URL = "https://__LICENSE_HOST__:__LICENSE_PORT__/certificate"
LICENSE_SERVER_FILE_PATH = "__BKDATA_CERT_PATH__"

# [可选] MYSQL02 配置，提供给数据开发使用
CONFIG_DB_HOST = "__MYSQL_DATAHUB_IP0__"
CONFIG_DB_PORT = __MYSQL_DATAHUB_PORT__
CONFIG_DB_USER = "__MYSQL_DATAHUB_USER__"
CONFIG_DB_PASSWORD = "__MYSQL_DATAHUB_PASS__"

# [可选] MYSQL02 配置，提供给数据开发使用
DATAFLOW_DB_HOST = "__MYSQL_DATAFLOW_IP0__"
DATAFLOW_DB_PORT = __MYSQL_DATAFLOW_PORT__
DATAFLOW_DB_USER = "__MYSQL_DATAFLOW_USER__"
DATAFLOW_DB_PASSWORD = "__MYSQL_DATAFLOW_PASS__"

# modeling db
MODELING_DB_HOST = "__MYSQL_MODELING_IP0__"
MODELING_DB_PORT = __MYSQL_MODELING_PORT__
MODELING_DB_USER = "__MYSQL_MODELING_USER__"
MODELING_DB_PASSWORD = "__MYSQL_MODELING_PASS__"

# [可选] redis配置
REDIS_AUTH = "__REDIS_PASS__"
REDIS_DNS = "__REDIS_HOST__"
REDIS_HOST = "__REDIS_HOST__"
REDIS_NAME = "__REDIS_MASTER_NAME__"
REDIS_PORT = __REDIS_PORT__
REDIS_PASS = "__REDIS_PASS__"

# [可选] RabbitMQ
RABBITMQ_HOST = "__RABBITMQ_HOST__"
RABBITMQ_PORT = __RABBITMQ_PORT__
RABBITMQ_USER = "__RABBITMQ_USER__"
RABBITMQ_PASS = "__RABBITMQ_PASS__"
RABBITMQ_VHOST = "__RABBITMQ_VHOST__"

# monitor相关
# UC metric 配置
METRIC_KAFKA_SERVER = "__KAFKA_HOST__:__KAFKA_PORT__"

# SQL 解析配置
BKSQL_HOST = "__BKDATA_BKSQL_HOST__"
BKSQL_PORT = __BKDATA_BKSQL_PORT__
BKSQL_SPARKSQL_HOST = "__BKDATA_BKSQL_SPARKSQL_HOST__"
BKSQL_FLINKSQL_HOST = "__BKDATA_BKSQL_FLINKSQL_HOST__"
BKSQL_STORMSQL_HOST = "__BKDATA_BKSQL_STORMSQL_HOST__"
BKSQL_EXTEND_HOST = "__BKDATA_BKSQL_EXTEND_HOST__"
BKSQL_EXTEND_PORT = __BKDATA_BKSQL_EXTEND_PORT__
BKSQL_SPARKSQL_PORT = __BKDATA_BKSQL_SPARKSQL_PORT__
BKSQL_FLINKSQL_PORT = __BKDATA_BKSQL_FLINKSQL_PORT__
BKSQL_STORMSQL_PORT = __BKDATA_BKSQL_STORMSQL_PORT__
BKSQL_MLSQL_HOST = "__BKDATA_MLSQL_HOST__"
BKSQL_MLSQL_PORT = __BKDATA_MLSQL_PORT__

# batch相关
# hdfs配置
HDFS_BIN_DIR = "__BK_HOME__/hadoop/bin"
HDFS_BACKUP_DIR = "__BK_HOME__/logs/hadoop/hdfs/backup"

# spark相关
LIVY_NODE_LABEL = "__LIVY_NODE_LABEL__"
LIVY_DEFAULT_CLUSTER_GROUP = "__LIVY_DEFAULT_CLUSTER_GROUP__"
LIVY_CLUSTER_NAME_PREFIX = "__LIVY_CLUSTER_NAME_PREFIX__"
SPARK_SQL_NODE_LABEL = "__BKDATA_SPARK_SQL_NODE_LABEL__"
SPARK_SQL_NODE_LABEL_DEFAULT_LIST = [__BKDATA_SPARK_SQL_NODE_LABEL_DEFAULT_LIST__]

# [内部batch]tdw相关
TDW_UC_JAR_FILE_PATH = "__BKDATA_TDW_UC_JAR_FILE_PATH__"
TDW_BATCH_LZ_ADMIN_USERS = "__BKDATA_TDW_BATCH_LZ_ADMIN_USERS__"
TDW_LOG_SERVER = "__BKDATA_TDW_LOG_SERVER__"
TDW_TASK_NODE_LABEL = "__BKDATA_TDW_TASK_NODE_LABEL__"

# stream相关
MULTI_GEOG_AREA = __MULTI_GEOG_AREA__

# stream checkpoint
STREAM_CHECKPOINT_REDIS_HOST = "__REDIS_HOST__"
STREAM_CHECKPOINT_REDIS_PORT = __REDIS_PORT__
STREAM_CHECKPOINT_REDIS_PASSWORD = "__REDIS_PASS__"
STREAM_CHECKPOINT_REDIS_SENTINEL_HOST = "__REDIS_CLUSTER_HOST__"
STREAM_CHECKPOINT_REDIS_SENTINEL_PORT = __REDIS_CLUSTER_PORT__
STREAM_CHECKPOINT_REDIS_SENTINEL_NAME = "__REDIS_MASTER_NAME__"

# stream debug
STREAM_DEBUG_RESULT_DATA_REST_API_URL = (
    "http://__BKDATA_DATAFLOWAPI_HOST__:__BKDATA_DATAFLOWAPI_PORT__/v3/dataflow/stream/debugs/{0}/result_data/"
)
STREAM_DEBUG_NODE_METRIC_REST_API_URL = (
    "http://__BKDATA_DATAFLOWAPI_HOST__:__BKDATA_DATAFLOWAPI_PORT__/v3/dataflow/stream/debugs/{0}/metric_info/"
)
STREAM_DEBUG_ERROR_DATA_REST_API_URL = (
    "http://__BKDATA_DATAFLOWAPI_HOST__:__BKDATA_DATAFLOWAPI_PORT__/v3/dataflow/stream/debugs/{0}/error_data/"
)
KAFKA_OP_ROLE_NAME = "__KAFKA_OP_ROLE_NAME__"

# [内部stream]
# yaml project
LOL_PROJECTS = [__BKDATA_LOL_PROJECTS__]
YAML_ADMINISTRATORS = [__BKDATA_YAML_ADMINISTRATORS__]

# udf conf
UDF_MAVEN_PATH = "__BKDATA_UDF_MAVEN_PATH__"
UDF_JEP_PATH = "__BKDATA_UDF_JEP_PATH__"
UDF_PYTHON_SCRIPT_PATH = "__BKDATA_UDF_PYTHON_SCRIPT_PATH__"
UDF_LD_PRELOAD = "__BKDATA_UDF_LD_PRELOAD__ $LD_PRELOAD"

# mlsql 相关
MLSQL_CLUSEER_GRUUP = "__BKDATA_MLSQL_CLUSEER_GRUUP__"
MLSQL_DEFAULT_CLUSTER_GROUP = "__BKDATA_MLSQL_DEFAULT_CLUSTER_GROUP__"
MLSQL_DEFAULT_CLUSTER_NAME = "__BKDATA_MLSQL_DEFAULT_CLUSTER_NAME__"
MLSQL_HDFS_CLUSTER_GROUP = "__BKDATA_MLSQL_HDFS_CLUSTER_GROUP__"
MLSQL_MODEL_PATH = "__BKDATA_MLSQL_MODEL_PATH__"
MLSQL_NODE_LABEL = "__BKDATA_MLSQL_NODE_LABEL__"
MLSQL_HDFS_SERVER_DIR = "__BKDATA_MLSQL_HDFS_SERVER_DIR__"
MLSQL_MODEL_INFO_PATH = "__BKDATA_MLSQL_MODEL_INFO_PATH__"
MLSQL_MODEL_INFO_HDFS_USER = "__BKDATA_MLSQL_MODEL_INFO_HDFS_USER__"
MLSQL_ZK_SERVER = "__BKDATA_MLSQL_ZK_SERVER__"
MLSQL_ZK_PATH = "__BKDATA_MLSQL_ZK_PATH__"
# 增加TF相关的配置：
TENSORFLOW_NAMESPACE = "__TENSORFLOW_NAMESPACE__"
TENSORFLOW_K8S_CLUSTER_URL = "__TENSORFLOW_K8S_CLUSTER_URL__"
TENSORFLOW_K8S_API_TOKEN = "__TENSORFLOW_K8S_API_TOKEN__"
TENSORFLOW_K8S_WORKER_NUMBER = 2
TENSORFLOW_K8S_WORKER_CPU = 1
TENSORFLOW_K8S_WORKER_MEMORY = "1.0Gi"
TENSORFLOW_K8S_IMAGE_URL = "__TENSORFLOW_K8S_IMAGE_URL__"

# operator
SYSTEM_ADMINISTRATORS = [__BKDATA_SYSTEM_ADMINISTRATORS__]
AIOPS_TASK_ADMINISTRATORS = [__BKDATA_AIOPS_TASK_ADMINISTRATORS__]
DEVELOPERS = [__BKDATA_DEVELOPERS__]

# 扩分区相关
# 数据平台门户url前缀，用于发送消息通知时，链接到对应的flow链接
DATA_PORTAL_PREFIX = "__BKDATA_DATA_PORTAL_PREFIX__"

# [内部ip库]ip库相关
IPV4_RESULT_TABLE_ID = __BKDATA_IPV4_RESULT_TABLE_ID__
IPV6_RESULT_TABLE_ID = __BKDATA_IPV6_RESULT_TABLE_ID__
# 作为静态关联的离线数据源结果表
BATCH_IP_RESULT_TABLE_ID = [__BKDATA_BATCH_IP_RESULT_TABLE_ID__]
# ipredis 通用业务库的rtid简化版
IP_REDIS_V4_RESULT_TABLE_ID = [__BKDATA_IP_REDIS_V4_RESULT_TABLE_ID__]
IP_REDIS_V6_RESULT_TABLE_ID = [__BKDATA_IP_REDIS_V6_RESULT_TABLE_ID__]
# ipredis 通用业务库的rtid
IP_REDIS_V4_TGEO_GENERIC_BUSINESS_RESULT_TABLE_ID = [__BKDATA_IP_REDIS_V4_TGEO_GENERIC_BUSINESS__]
IP_REDIS_V6_TGEO_GENERIC_BUSINESS_RESULT_TABLE_ID = [__BKDATA_IP_REDIS_V6_TGEO_GENERIC_BUSINESS__]
# ipredis 基础网络库的rtid
IP_REDIS_V4_TGEO_BASE_NETWORK_RESULT_TABLE_ID = [__BKDATA_IP_REDIS_V4_TGEO_BASE_NETWORK__]
IP_REDIS_V6_TGEO_BASE_NETWORK_RESULT_TABLE_ID = [__BKDATA_IP_REDIS_V6_TGEO_BASE_NETWORK__]
# ipredis gslb库的rtid
IP_REDIS_V4_GSLB_RESULT_TABLE_ID = [__BKDATA_IP_REDIS_V4_GSLB__]
IP_REDIS_V6_GSLB_RESULT_TABLE_ID = [__BKDATA_IP_REDIS_V6_GSLB__]

# tasklog日志相关
# spark job appowner
SPARK_APP_USER_NAME = "__BKDATA_SPARK_APP_USER_NAME__"
# flink job appowner
FLINK_APP_USER_NAME = "__BKDATA_FLINK_APP_USER_NAME__"
# 数据平台在CC中的appid
DP_CC_APP_ID = __BKDATA_DP_CCID__
# k8s log
ES_LOG_INDEX_SET_ID = __BKDATA_ES_LOG_INDEX_SET_ID__

#Tencent is pleased to support the open source community by making BK-BASE 蓝鲸基础平台 available. 
#
#Copyright (C) 2021 THL A29 Limited, a Tencent company.  All rights reserved. 
#
#BK-BASE 蓝鲸基础平台 is licensed under the MIT License.
#
#License for BK-BASE 蓝鲸基础平台:
#--------------------------------------------------------------------
#Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
#documentation files (the "Software"), to deal in the Software without restriction, including without limitation
#the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
#and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#
#The above copyright notice and this permission notice shall be included in all copies or substantial
#portions of the Software.
#
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
#LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
#NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
#WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
#SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# databus基础配置属性
databusmgr.services=KafkaOffsetHandler,RestService,CronService,ClusterStatHandler,ErrorLogHandler,EventHandler

databusmgr.server.http.port=__BKDATA_DATABUSMGR_PORT__
databusmgr.zk.addr=__ZK_INNER_HOST__:__ZK_PORT__

databusmgr.databus.admin=__DATABUSMGR_DATABUS_ADMIN__
databusmgr.storekit.admin=__DATABUSMGR_STOREKIT_ADMIN__
databusmgr.stream.admin=__DATABUSMGR_STREAM_ADMIN__
databusmgr.batch.admin=__DATABUSMGR_BATCH_ADMIN__
databusmgr.es.admin=__DATABUSMGR_ES_ADMIN__
databusmgr.alarm.tag=__DATABUSMGR_ALARM_TAG__

# 告警支持的发送方式:sms,mail,wechat,eewechat,phone
databusmgr.minor.alarm.template=mail
databusmgr.ordinary.alarm.template=wechat
databusmgr.fatal.alarm.template=wechat,phone

databusmgr.cron.jobs=CollectIcebergSummary|MaintainIceberg|ClusterStatusCheck|CollectRtDailyCount|ClusterCapacityCheck
databusmgr.cron.triggers=0 15,45 * * * ?|0 3 6,14,22 * * ?|0 10,25,40,55 * * * ?|30 5 0 * * ?|0 0 */2 * * ?

kafka.bootstrap.servers=__KAFKA_OP_HOST__:__KAFKA_PORT__
databusmgr.connector.stat.topic=bkdata_data_monitor_databus_metrics591
consumer.auto.offset.reset=earliest
consumer.max.poll.records=100
consumer.fetch.min.bytes=1024
consumer.fetch.max.wait.ms=5000
consumer.fetch.message.max.bytes=5242880
consumer.max.partition.fetch.bytes=5242880
consumer.heartbeat.interval.ms=20000
consumer.session.timeout.ms=30000
consumer.request.timeout.ms=31000
consumer.reconnect.backoff.ms=500
consumer.retry.backoff.ms=1000

api.dns=__BKDATA_DATABUSAPI_HOST__:__BKDATA_DATABUSAPI_PORT__
api.meta.dns=__BKDATA_METAAPI_HOST__:__BKDATA_METAAPI_PORT__
api.datamanage.dns=__BKDATA_DATAMANAGEAPI_HOST__:__BKDATA_DATAMANAGEAPI_PORT__
api.datahub.dns=__BKDATA_DATAHUBAPI_HOST__:__BKDATA_DATAHUBAPI_PORT__
api.storekit.dns=__BKDATA_DATAHUBAPI_HOST__:__BKDATA_DATAHUBAPI_PORT__


metric.tsdb.url=http://__TSDB_PROXY_HOST__:__TSDB_PROXY_PORT__/write
metric.tsdb.user=__TSDB_USER__
metric.tsdb.pass=__TSDB_PASS__
metric.tsdb.dbname=monitor_performance_metrics
metric.tsdb.optargs.rp=autogen

admin.app.code=__APP_CODE__
admin.app.secret=__APP_TOKEN__
admin.notify.url=http://__BKDATA_DATAMANAGEAPI_HOST__:__BKDATA_DATAMANAGEAPI_PORT__/v3/datamanage/dmonitor/alerts/send/

storekit.cluster.type.list=es,hdfs
storekit.capacity.warn.limit=15

daily.stat.delta.days=0

consul.dns=__CONSUL_HOST__:__CONSUL_PORT__
concern.kafka.clusters=queue,inner,outer
kafka.sasl.cluster=__KAFKA_QUEUE_DATACENTER_HOST__:__KAFKA_PORT__
kafka.sasl.user=__KAFKA_QUEUE_SASL_USER__
kafka.sasl.pass=__KAFKA_QUEUE_SASL_PASS__
kafka.jmx.port=__KAFKA_JMX_PORT__
admin.instance.key=__CRYPT_INSTANCE_KEY__
lag.warn=10000
percent.warn=30
alarm.interval=15
kafka.offset.commit.timeout=720

geog.area=__DEFAULT_GEOG_AREA_TAG__

iceberg.maintain.parallel=5
iceberg.to.delete.expire=15
iceberg.compact.days=1
iceberg.clean.orphan.method=move
iceberg.clean.orphan.days=4,14,24
